name: Release
on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  generate-changelog:
    name: Generate changelog
    runs-on: ubuntu-22.04
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate a changelog
        uses: orhun/git-cliff-action@main
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --no-exec --github-repo ${{ github.repository }}

  publish-tauri:
    permissions:
      contents: write
    needs: generate-changelog
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''
          - platform: 'ubuntu-latest'
            args: '--target aarch64' # arm64-v8a
            android: true
            arch: 'arm64-v8a'
          - platform: 'ubuntu-latest'
            args: '--target armv7' # armeabi-v7a
            android: true
            arch: 'armeabi-v7a'
          - platform: 'ubuntu-latest'
            args: '--target x86_64'
            android: true
            arch: 'x86_64'
          - platform: 'ubuntu-latest'
            args: '--target i686' # x86
            android: true
            arch: 'x86'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.x.x

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || matrix.arch == 'arm64-v8a' && 'aarch64-linux-android' || matrix.arch == 'armeabi-v7a' && 'armv7-linux-androideabi' || matrix.arch == 'x86_64' && 'x86_64-linux-android' || matrix.arch == 'x86' && 'i686-linux-android' || '' }}

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf gstreamer1.0-plugins-ugly gstreamer1.0-plugins-bad

      - name: Setup Java
        if: matrix.android
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Android SDK
        if: matrix.android
        uses: android-actions/setup-android@v3

      - name: Setup Android NDK
        if: matrix.android
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26d
          link-to-sdk: true

      - name: Install packages
        run: pnpm install # change this to npm, pnpm or bun depending on which one you use.

      - name: Init Android
        if: matrix.android
        env:
          NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          pnpm add -D @tauri-apps/cli
          pnpm tauri android init
          pnpm tauri icon public/icon.png

      - uses: intro-skipper/tauri-action@cf90756d8e4165db05c6fef93dc199e4501680da
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        with:
          tagName: ${{ github.ref_name }} # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'Jellyfin Segment Editor __VERSION__'
          releaseBody: ${{ needs.generate-changelog.outputs.release_body }}
          releaseDraft: true
          prerelease: false
          mobile: ${{ matrix.android || matrix.ios }}
          args: ${{ matrix.args }}

      - name: Modify AndroidManifest
        if: matrix.android
        run: |
          java -jar ManifestEditor-2.0.jar -aa "android-usesCleartextTraffic:true" src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk
          java -jar uber-apk-signer-1.3.0.jar -apks  src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned-unsigned.apk

      - name: Get Node project version
        if: matrix.android
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Rename APK file
        if: matrix.android
        run: |
          mv ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-aligned-debugSigned.apk ./src-tauri/gen/android/app/build/outputs/apk/universal/release/Jellyfin.Segment.Editor_${{ steps.package-version.outputs.current-version}}_${{ matrix.arch }}.apk

      - name: Publish Android
        if: matrix.android
        uses: softprops/action-gh-release@v2.2.1
        with:
          draft: true
          name: Jellyfin Segment Editor ${{ steps.package-version.outputs.current-version}}
          tag_name: ${{ github.ref_name }}
          generate_release_notes: false
          files: src-tauri/gen/android/app/build/outputs/apk/universal/release/Jellyfin.Segment.Editor_*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  rerun-failed-jobs:
    runs-on: ubuntu-latest
    needs: [ publish-tauri ]
    if: failure()
    steps:
      - name: Rerun failed jobs in current workflow
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh run rerun ${{ github.run_id }} --failed

  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker meta
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ghcr.io/intro-skipper/jellyfin-se
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Login Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          push: true
